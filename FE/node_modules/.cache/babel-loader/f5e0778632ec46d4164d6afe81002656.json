{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\project rahasia\\\\FE\\\\src\\\\bank\\\\index.jsx\";\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport bankService from '../service/bankService';\nimport FormInput from './formInput';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nexport default class Index extends React.Component {\n  constructor() {\n    super();\n    this.BankModel = {\n      id: 0,\n      name: '',\n      va_code: '',\n      is_delete: false\n    };\n\n    this.loadList = async () => {\n      const {\n        filter\n      } = this.state;\n      const respon = await bankService.getAllSearch(filter);\n      const countData = await bankService.countBank(filter);\n      let count = 0;\n\n      if (respon.success && countData.success) {\n        count = countData.result[0].total_bank;\n        this.setState({\n          ListBank: respon.result,\n          totalData: Math.ceil(count / filter.pageSize)\n        });\n      }\n    };\n\n    this.filterHandler = name => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        filter: { ...this.state.filter,\n          [name]: value\n        }\n      });\n    };\n\n    this.handleSearch = () => {\n      const {\n        filter\n      } = this.state;\n    };\n\n    this.handleClose = async () => {\n      this.setState({\n        showModal: false,\n        modalSukses: false,\n        modalEdit: false,\n        modalDelete: false\n      });\n    };\n\n    this.funcCreateHandler = async () => {\n      this.setState({\n        BankModel: this.BankModel,\n        mode: 'create',\n        showModal: true\n      });\n    };\n\n    this.funcChangeHandler = name => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        BankModel: { ...this.state.BankModel,\n          [name]: value\n        }\n      });\n    };\n\n    this.funcSaveHandler = async () => {\n      const {\n        BankModel,\n        mode\n      } = this.state;\n\n      if (mode === 'edit') {\n        if (this.funcValidationDuplicateVA()) {\n          const {\n            id_user\n          } = this.state;\n          id_user = id;\n          localStorage.setItem('id', 1);\n          const id = localStorage.getItem('id');\n          const respon = await bankService.updateBank(BankModel, id_user);\n\n          if (respon.success) {\n            this.setState({\n              modalEdit: true\n            });\n            this.loadList();\n          } else {\n            alert('Error ' + respon.result);\n          }\n        }\n      } else {\n        if (this.funcValidationType() && this.funcValidationDuplicate()) {\n          const respon = await bankService.addData(BankModel);\n\n          if (respon.success) {\n            this.loadList();\n            this.setState({\n              BankModel: this.BankModel,\n              showModal: false,\n              modalSukses: true\n            });\n          } else {\n            alert('Error' + respon.result);\n          }\n        }\n      }\n    };\n\n    this.funcUpdateFalse = async data => {\n      const respon = await bankService.deleteData(data);\n\n      if (respon.success) {\n        this.setState({\n          modalDelete: true\n        });\n        this.loadList();\n      } else {\n        alert('Error ' + respon.result);\n      }\n\n      this.setState({\n        BankModel: this.BankModel,\n        mode: '',\n        showModal: false\n      });\n    };\n\n    this.funcEditHandler = async id => {\n      const respon = await bankService.getById(id);\n      console.log(respon);\n\n      if (respon.success) {\n        this.setState({\n          BankModel: respon.result,\n          mode: 'edit',\n          showModal: true\n        });\n      }\n    };\n\n    this.funcDelHandler = data => {\n      this.setState({\n        mode: 'delete',\n        showModal: true,\n        BankModel: data\n      });\n    };\n\n    this.getDataCheck = async () => {\n      const respon = await bankService.getDataCheck();\n      console.log(respon);\n\n      if (respon.success) {\n        this.setState({\n          cekData: respon.result\n        });\n      }\n    };\n\n    this.funcHandleValidation = () => {\n      let fields = this.state.BankModel;\n      let errors = {};\n      let formIsValid = true;\n\n      if (!fields[\"name\"]) {\n        formIsValid = false;\n        errors[\"name\"] = \"This Fields is Required\";\n      }\n\n      if (!fields[\"va_code\"]) {\n        formIsValid = false;\n        errors[\"va_code\"] = \"This Fields is Required\";\n      }\n\n      if (typeof fields[\"va_code\"] !== \"undefined\") {\n        if (fields[\"va_code\"].length > 10) {\n          formIsValid = false;\n          errors[\"va_code\"] = \"VA Code only 10 Digits or Less\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    };\n\n    this.funcValidationType = () => {\n      if (this.funcHandleValidation()) {\n        let fields = this.state.BankModel;\n        let errors = {};\n        let formIsValid = true;\n\n        if (typeof fields[\"va_code\"] !== \"undefined\") {\n          if (!fields[\"va_code\"].match(/^[0-9\\b]+$/)) {\n            formIsValid = false;\n            errors[\"va_code\"] = \"VA Code Only Numbers\";\n          }\n        }\n\n        this.setState({\n          errors: errors\n        });\n        return formIsValid;\n      }\n    };\n\n    this.funcValidationDuplicate = () => {\n      const {\n        BankModel,\n        cekData\n      } = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      for (let i = 0; i < cekData.length; i++) {\n        if (BankModel['name'] == cekData[i].name) {\n          formIsValid = false;\n          errors[\"name\"] = \"Bank Name is Register\";\n          console.log(\"name register\");\n        }\n\n        if (BankModel['va_code'] == cekData[i].va_code) {\n          formIsValid = false;\n          errors[\"va_code\"] = \"VA Code is Register\";\n          console.log(\"va register\");\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    };\n\n    this.funcValidationDuplicateVA = () => {\n      const {\n        BankModel,\n        cekData\n      } = this.state;\n      let errors = {};\n      let formIsValid = true;\n\n      for (let i = 0; i < cekData.length; i++) {\n        if (BankModel['va_code'] == cekData[i].va_code) {\n          formIsValid = false;\n          errors[\"va_code\"] = \"VA Code is Register\";\n          console.log(\"va register\");\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    };\n\n    this.onChangePage = number => {\n      const {\n        filter\n      } = this.state;\n      this.setState({\n        filter: { ...this.state.filter,\n          [\"page\"]: number\n        }\n      }, () => this.loadList());\n    };\n\n    this.pageSizeHandler = val => {\n      const {\n        filter\n      } = this.state;\n      let page = 1;\n\n      if (filter.page != 1) {\n        this.setState({\n          filter: { ...this.state.filter,\n            [\"pageSize\"]: val,\n            [\"page\"]: 1\n          }\n        }, () => this.loadList());\n      } else {\n        this.setState({\n          filter: { ...this.state.filter,\n            [\"pageSize\"]: val\n          }\n        }, () => this.loadList());\n      }\n    };\n\n    this.handlerSorting = () => {\n      let order = \"\";\n      const {\n        filter\n      } = this.state;\n\n      if (filter.order === \"\") {\n        order = \"DESC\";\n      }\n\n      this.setState({\n        filter: { ...this.state.filter,\n          [\"order\"]: order\n        }\n      }, () => this.loadList());\n    };\n\n    this.state = {\n      ListBank: [],\n      BankModel: this.BankModel,\n      showModal: false,\n      modalSukses: false,\n      modalEdit: false,\n      modalDelete: false,\n      mode: '',\n      formIsValid: true,\n      errors: {},\n      filter: {\n        search: '',\n        order: '',\n        page: '1',\n        pageSize: '5'\n      },\n      totalData: 1,\n      cekData: {\n        name: '',\n        va_code: ''\n      },\n      id_user: 0\n    };\n  }\n\n  componentDidMount() {\n    const {\n      filter\n    } = this.state;\n    this.loadList(filter);\n    this.getDataCheck();\n  }\n\n  renderPagination() {\n    let items = [];\n    const {\n      filter,\n      totalData\n    } = this.state;\n\n    for (let number = 1; number <= totalData; number++) {\n      items.push( /*#__PURE__*/_jsxDEV(PaginationItem, {\n        active: number === filter.page,\n        children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n          onClick: () => this.onChangePage(number),\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(Pagination, {\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const {\n      ListBank,\n      BankModel,\n      showModal,\n      modalSukses,\n      modalEdit,\n      modalDelete,\n      mode,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-8\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-info btn-lg\",\n            onClick: this.funcCreateHandler,\n            children: \"Add Bank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"form-control\",\n            type: \"input\",\n            id: \"search\",\n            placeholder: \"Search...\",\n            \"aria-label\": \"Search\",\n            onChange: this.filterHandler(\"search\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-inline\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"btn-froup\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-navbar\",\n                type: \"button\",\n                onClick: this.loadList,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-navbar\",\n                type: \"submit\",\n                onClick: this.handlerSorting,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-sort\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-primary dropdown-toggle\",\n                type: \"button\",\n                id: \"dropdownMenuButton\",\n                \"data-toggle\": \"dropdown\",\n                \"aria-haspopup\": \"true\",\n                \"aria-expanded\": \"false\",\n                children: \"Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"dropdown-menu\",\n                \"aria-labelledby\": \"dropdownMenuButton\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  class: \"dropdown-item\",\n                  href: \"#\",\n                  onClick: () => this.pageSizeHandler('5'),\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  class: \"dropdown-item\",\n                  href: \"#\",\n                  onClick: () => this.pageSizeHandler('10'),\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  class: \"dropdown-item\",\n                  href: \"#\",\n                  onClick: () => this.pageSizeHandler('20'),\n                  children: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  class: \"dropdown-item\",\n                  href: \"#\",\n                  onClick: () => this.pageSizeHandler('20'),\n                  children: \"30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        handleClose: this.handleClose,\n        funcSaveHandler: this.funcSaveHandler,\n        funcChangeHandler: this.funcChangeHandler,\n        funcUpdateFalse: this.funcUpdateFalse,\n        BankModel: BankModel,\n        showModal: showModal,\n        modalSukses: modalSukses,\n        modalEdit: modalEdit,\n        modalDelete: modalDelete,\n        mode: mode,\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          class: \"table-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"VA Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ListBank.map(data => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.va_code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-success\",\n                  onClick: () => this.funcEditHandler(data.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 45\n                }, this), \" \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-danger\",\n                  onClick: () => this.funcDelHandler(data),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 41\n              }, this)]\n            }, data.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"float-right\",\n            children: this.renderPagination()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/project rahasia/FE/src/bank/index.jsx"],"names":["React","Table","bankService","FormInput","Pagination","PaginationItem","PaginationLink","Index","Component","constructor","BankModel","id","name","va_code","is_delete","loadList","filter","state","respon","getAllSearch","countData","countBank","count","success","result","total_bank","setState","ListBank","totalData","Math","ceil","pageSize","filterHandler","target","value","handleSearch","handleClose","showModal","modalSukses","modalEdit","modalDelete","funcCreateHandler","mode","funcChangeHandler","funcSaveHandler","funcValidationDuplicateVA","id_user","localStorage","setItem","getItem","updateBank","alert","funcValidationType","funcValidationDuplicate","addData","funcUpdateFalse","data","deleteData","funcEditHandler","getById","console","log","funcDelHandler","getDataCheck","cekData","funcHandleValidation","fields","errors","formIsValid","length","match","i","onChangePage","number","pageSizeHandler","val","page","handlerSorting","order","search","componentDidMount","renderPagination","items","push","render","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport bankService from '../service/bankService'\r\nimport FormInput from './formInput'\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\r\n\r\nexport default class Index extends React.Component {\r\n\r\n\r\n    BankModel = {\r\n        id: 0,\r\n        name: '',\r\n        va_code: '',\r\n        is_delete: false\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            ListBank: [],\r\n            BankModel: this.BankModel,\r\n            showModal: false,\r\n            modalSukses: false,\r\n            modalEdit: false,\r\n            modalDelete: false,\r\n            mode: '',\r\n            formIsValid: true,\r\n            errors: {},\r\n            filter: {\r\n                search: '',\r\n                order: '',\r\n                page: '1',\r\n                pageSize: '5'\r\n            },\r\n            totalData: 1,\r\n            cekData: {\r\n                name: '',\r\n                va_code: ''\r\n            },\r\n            id_user: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { filter } = this.state\r\n        this.loadList(filter)\r\n        this.getDataCheck()\r\n    }\r\n\r\n    loadList = async () => {\r\n        const { filter } = this.state\r\n        const respon = await bankService.getAllSearch(filter)\r\n        const countData = await bankService.countBank(filter)\r\n        let count = 0\r\n        if (respon.success && countData.success) {\r\n            count = countData.result[0].total_bank\r\n            this.setState({\r\n                ListBank: respon.result,\r\n                totalData: Math.ceil(count / filter.pageSize)\r\n            })\r\n        }\r\n    }\r\n\r\n    filterHandler = name => ({ target: { value } }) => {\r\n        this.setState({\r\n            filter: {\r\n                ...this.state.filter,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSearch = () => {\r\n        const { filter } = this.state\r\n    }\r\n\r\n    handleClose = async () => {\r\n        this.setState({\r\n            showModal: false,\r\n            modalSukses: false,\r\n            modalEdit: false,\r\n            modalDelete: false\r\n        })\r\n    }\r\n\r\n    funcCreateHandler = async () => {\r\n        this.setState({\r\n            BankModel: this.BankModel,\r\n            mode: 'create',\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n    funcChangeHandler = name => ({ target: { value } }) => {\r\n        this.setState({\r\n            BankModel: {\r\n                ... this.state.BankModel,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    funcSaveHandler = async () => {\r\n        const { BankModel, mode } = this.state\r\n        if (mode === 'edit') {\r\n            if (this.funcValidationDuplicateVA()) {\r\n                const { id_user } = this.state\r\n                id_user = id\r\n                localStorage.setItem('id', 1)\r\n                const id = localStorage.getItem('id')\r\n                \r\n                const respon = await bankService.updateBank(BankModel, id_user)\r\n\r\n                if (respon.success) {\r\n                    this.setState({\r\n                        modalEdit: true\r\n                    })\r\n                    this.loadList()\r\n                } else {\r\n                    alert('Error ' + respon.result)\r\n                }\r\n            }\r\n        } else {\r\n            if (this.funcValidationType() && this.funcValidationDuplicate()) {\r\n                const respon = await bankService.addData(BankModel)\r\n\r\n                if (respon.success) {\r\n                    this.loadList()\r\n                    this.setState({\r\n                        BankModel: this.BankModel,\r\n                        showModal: false,\r\n                        modalSukses: true\r\n                    })\r\n                } else {\r\n                    alert('Error' + respon.result)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    funcUpdateFalse = async (data) => {\r\n        const respon = await bankService.deleteData(data)\r\n\r\n        if (respon.success) {\r\n            this.setState({\r\n                modalDelete: true\r\n            })\r\n            this.loadList()\r\n        } else {\r\n            alert('Error ' + respon.result)\r\n        }\r\n\r\n        this.setState({\r\n            BankModel: this.BankModel,\r\n            mode: '',\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    funcEditHandler = async (id) => {\r\n        const respon = await bankService.getById(id)\r\n        console.log(respon)\r\n        if (respon.success) {\r\n            this.setState({\r\n                BankModel: respon.result,\r\n                mode: 'edit',\r\n                showModal: true\r\n            })\r\n        }\r\n    }\r\n\r\n    funcDelHandler = (data) => {\r\n        this.setState({\r\n            mode: 'delete',\r\n            showModal: true,\r\n            BankModel: data\r\n        })\r\n    }\r\n\r\n    getDataCheck = async () => {\r\n        const respon = await bankService.getDataCheck()\r\n\r\n        console.log(respon)\r\n        if (respon.success) {\r\n            this.setState({\r\n                cekData: respon.result\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    // VALIDATION\r\n    funcHandleValidation = () => {\r\n        let fields = this.state.BankModel\r\n\r\n        let errors = {}\r\n        let formIsValid = true\r\n\r\n        if (!fields[\"name\"]) {\r\n            formIsValid = false\r\n            errors[\"name\"] = \"This Fields is Required\"\r\n        }\r\n\r\n        if (!fields[\"va_code\"]) {\r\n            formIsValid = false\r\n            errors[\"va_code\"] = \"This Fields is Required\"\r\n        }\r\n\r\n        if (typeof fields[\"va_code\"] !== \"undefined\") {\r\n            if (fields[\"va_code\"].length > 10) {\r\n                formIsValid = false\r\n                errors[\"va_code\"] = \"VA Code only 10 Digits or Less\"\r\n            }\r\n        }\r\n\r\n        this.setState({ errors: errors })\r\n        return formIsValid\r\n    }\r\n\r\n    funcValidationType = () => {\r\n        if (this.funcHandleValidation()) {\r\n            let fields = this.state.BankModel\r\n\r\n            let errors = {}\r\n            let formIsValid = true\r\n\r\n            if (typeof fields[\"va_code\"] !== \"undefined\") {\r\n                if (!fields[\"va_code\"].match(/^[0-9\\b]+$/)) {\r\n                    formIsValid = false;\r\n                    errors[\"va_code\"] = \"VA Code Only Numbers\";\r\n                }\r\n            }\r\n            this.setState({ errors: errors })\r\n            return formIsValid\r\n        }\r\n    }\r\n\r\n\r\n    funcValidationDuplicate = () => {\r\n        const { BankModel, cekData } = this.state\r\n        let errors = {}\r\n        let formIsValid = true\r\n\r\n        for (let i = 0; i < cekData.length; i++) {\r\n            if (BankModel['name'] == cekData[i].name) {\r\n                formIsValid = false\r\n                errors[\"name\"] = \"Bank Name is Register\"\r\n                console.log(\"name register\")\r\n            }\r\n\r\n            if (BankModel['va_code'] == cekData[i].va_code) {\r\n                formIsValid = false\r\n                errors[\"va_code\"] = \"VA Code is Register\"\r\n                console.log(\"va register\")\r\n            }\r\n        }\r\n\r\n        this.setState({ errors: errors })\r\n        return formIsValid\r\n    }\r\n\r\n    funcValidationDuplicateVA = () => {\r\n        const { BankModel, cekData } = this.state\r\n        let errors = {}\r\n        let formIsValid = true\r\n\r\n        for (let i = 0; i < cekData.length; i++) {\r\n            if (BankModel['va_code'] == cekData[i].va_code) {\r\n                formIsValid = false\r\n                errors[\"va_code\"] = \"VA Code is Register\"\r\n                console.log(\"va register\")\r\n            }\r\n        }\r\n\r\n        this.setState({ errors: errors })\r\n        return formIsValid\r\n    }\r\n\r\n    //end validation\r\n\r\n    onChangePage = (number) => {\r\n        const { filter } = this.state\r\n        this.setState({\r\n            filter: {\r\n                ...this.state.filter,\r\n                [\"page\"]: number\r\n            }\r\n        }, () => this.loadList())\r\n    }\r\n\r\n    pageSizeHandler = (val) => {\r\n        const { filter } = this.state\r\n        let page = 1\r\n        if (filter.page != 1) {\r\n            this.setState({\r\n                filter: {\r\n                    ...this.state.filter,\r\n                    [\"pageSize\"]: val,\r\n                    [\"page\"]: 1\r\n                }\r\n            }, () => this.loadList())\r\n        }\r\n        else {\r\n            this.setState({\r\n                filter: {\r\n                    ...this.state.filter,\r\n                    [\"pageSize\"]: val\r\n                }\r\n            }, () => this.loadList())\r\n        }\r\n    }\r\n\r\n    handlerSorting = () => {\r\n        let order = \"\"\r\n        const { filter } = this.state\r\n\r\n        if (filter.order === \"\") {\r\n            order = \"DESC\"\r\n        }\r\n\r\n        this.setState({\r\n            filter: {\r\n                ...this.state.filter,\r\n                [\"order\"]: order\r\n            }\r\n        }, () => this.loadList())\r\n    }\r\n\r\n    renderPagination() {\r\n        let items = []\r\n        const { filter, totalData } = this.state\r\n\r\n        for (let number = 1; number <= totalData; number++) {\r\n            items.push(\r\n                <PaginationItem key={number} active={number === filter.page}>\r\n                    <PaginationLink onClick={() => this.onChangePage(number)}>\r\n                        {number}\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n            )\r\n        }\r\n        return (\r\n            <Pagination>{items}</Pagination>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { ListBank, BankModel, showModal, modalSukses, modalEdit, modalDelete, mode, errors } = this.state\r\n        return (\r\n            <div>\r\n                {/* {JSON.stringify(this.state.filter)} */}\r\n                <div class=\"row\">\r\n                    <div class=\"col-8\">\r\n                        <button type=\"button\" class=\"btn btn-info btn-lg\" onClick={this.funcCreateHandler}>Add Bank</button>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control\" type=\"input\" id=\"search\" placeholder=\"Search...\" aria-label=\"Search\" onChange={this.filterHandler(\"search\")}></input>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"btn-froup\">\r\n                                <button class=\"btn btn-navbar\" type=\"button\" onClick={this.loadList}>\r\n                                    <i class=\"fas fa-search\"></i>\r\n                                </button>\r\n                                <button class=\"btn btn-navbar\" type=\"submit\" onClick={this.handlerSorting}>\r\n                                    <i class=\"fas fa-sort\"></i>\r\n                                </button>\r\n                                <button class=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Size\r\n                                </button>\r\n                                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <a class=\"dropdown-item\" href=\"#\" onClick={() => this.pageSizeHandler('5')}>5</a>\r\n                                    <a class=\"dropdown-item\" href=\"#\" onClick={() => this.pageSizeHandler('10')}>10</a>\r\n                                    <a class=\"dropdown-item\" href=\"#\" onClick={() => this.pageSizeHandler('20')}>20</a>\r\n                                    <a class=\"dropdown-item\" href=\"#\" onClick={() => this.pageSizeHandler('20')}>30</a>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <FormInput\r\n                    handleClose={this.handleClose}\r\n                    funcSaveHandler={this.funcSaveHandler}\r\n                    funcChangeHandler={this.funcChangeHandler}\r\n                    funcUpdateFalse={this.funcUpdateFalse}\r\n                    BankModel={BankModel}\r\n                    showModal={showModal}\r\n                    modalSukses={modalSukses}\r\n                    modalEdit={modalEdit}\r\n                    modalDelete={modalDelete}\r\n                    mode={mode}\r\n                    errors={errors}\r\n                />\r\n\r\n                <br></br>\r\n                <br></br>\r\n                <Table>\r\n                    <thead class=\"table-primary\">\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Name</th>\r\n                            <th>VA Code</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            ListBank.map(data => {\r\n                                return (\r\n                                    <tr key={data.id}>\r\n                                        <td>{data.id}</td>\r\n                                        <td>{data.name}</td>\r\n                                        <td>{data.va_code}</td>\r\n                                        <td>\r\n                                            <button class=\"btn btn-success\" onClick={() => this.funcEditHandler(data.id)}>Edit</button> &nbsp;&nbsp;\r\n                                            <button class=\"btn btn-danger\" onClick={() => this.funcDelHandler(data)}>Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                <div class=\"row\">\r\n                    <div class=\"col-10\">\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <div class=\"float-right\">\r\n                            {this.renderPagination()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}